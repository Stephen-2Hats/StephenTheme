// Responsive Mixins
@mixin desktop-lg() {
    @media (max-width: $desktop-lg) {
        @content;
    }
}

@mixin desktop-md() {
    @media (max-width: $desktop-md) {
        @content;
    }
}

@mixin desktop-sm() {
    @media (max-width: $desktop-sm) {
        @content;
    }
}

@mixin desktop-xs() {
    @media (max-width: $desktop-xs) {
        @content;
    }
}

@mixin tablet-lg() {
    @media (max-width: $tablet-lg) {
        @content;
    }
}

@mixin tablet-md() {
    @media (max-width: $tablet-md) {
        @content;
    }
}

@mixin tablet-sm() {
    @media (max-width: $tablet-sm) {
        @content;
    }
}

@mixin mobile-lg() {
    @media (max-width: $mobile-lg) {
        @content;
    }
}

@mixin mobile-md() {
    @media (max-width: $mobile-md) {
        @content;
    }
}

@mixin mobile-sm() {
    @media (max-width: $mobile-sm) {
        @content;
    }
}

@mixin mobile-landscape() {
    @media (orientation: landscape) and (max-height: 580px) and (max-width: 820px) {
        @content;
    }
}

@mixin below($value) {
    @media (max-width: $value) {
        @content;
    }
}

@mixin above($value) {
    @media (min-width: $value) {
        @content;
    }
}


//Font. Face
@mixin font-face($variant, $type, $weight, $style) {

    $font-full-path: '#{$mcdart-font-path}/#{$variant}/#{$variant}';

    @font-face {
        font-family: '#{$variant}';
        src: url('#{$font-full-path}-#{$type}.eot');
        src: local('#{$variant} #{$type}'),
        local('#{$variant}-#{$type}'),
        url('#{$font-full-path}-#{$type}.eot?#iefix') format('embedded-opentype'),
        url('#{$font-full-path}-#{$type}.woff2') format('woff2'),
        url('#{$font-full-path}-#{$type}.woff') format('woff'),
        url('#{$font-full-path}-#{$type}.ttf') format('truetype'),
        url('#{$font-full-path}-#{$type}.svg##{$variant}') format('svg');
        font-weight: $weight;
        font-style: $style;
        font-display: swap;
    }

    @font-face {
        font-family: '#{$variant}-#{$type}';
        src: url('#{$font-full-path}-#{$type}.eot');
        src: local('#{$variant} #{$type}'),
        local('#{$variant}-#{$type}'),
        url('#{$font-full-path}-#{$type}.eot?#iefix') format('embedded-opentype'),
        url('#{$font-full-path}-#{$type}.woff2') format('woff2'),
        url('#{$font-full-path}-#{$type}.woff') format('woff'),
        url('#{$font-full-path}-#{$type}.ttf') format('truetype'),
        url('#{$font-full-path}-#{$type}.svg##{$variant}') format('svg');
        font-display: swap;
    }
}


// PX to REM Mixins
@function rem($value) {
    $remValue: ($value / 16) + rem;
    @return $remValue;
}

/**
Pseudo
div::after {
    @include pseudo;
    top: -1rem; left: -1rem;
    width: 1rem; height: 1rem;
}
*/

@mixin pseudo($display: block, $pos: absolute, $content: '') {
    content: $content;
    display: $display;
    position: $pos;
}

/**
Responsive ratio
div {
    @include responsive-ratio(16,9);
}
*/
@mixin responsive-ratio($x, $y, $pseudo: false) {
    $padding: unquote(($y / $x) * 100 + '%');

    @if $pseudo {
        &:before {
            @include pseudo($pos: relative);
            width: 100%;
            padding-top: $padding;
        }
    }

    @else {
        padding-top: $padding;
    }
}


/**
CSS Triangle
*/
@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false) {
    @include pseudo($pos: $position);
    width: 0;
    height: 0;

    @if $round {
        border-radius: 3px;
    }

    @if $direction==down {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-top: $size solid $color;
        margin-top: 0 - round($size / 2.5);
    }

    @else if $direction==up {
        border-left: $size solid transparent;
        border-right: $size solid transparent;
        border-bottom: $size solid $color;
        margin-bottom: 0 - round($size / 2.5);
    }

    @else if $direction==right {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-left: $size solid $color;
        margin-right: -$size;
    }

    @else if $direction==left {
        border-top: $size solid transparent;
        border-bottom: $size solid transparent;
        border-right: $size solid $color;
        margin-left: -$size;
    }
}

/**
Font styles
*/
@mixin font-calibri($size: false, $colour: false, $weight: false, $lh: false) {
    font-family: $base-font-family;

    @if $size {
        font-size: $size;
    }

    @if $colour {
        color: $colour;
    }

    @if $weight {
        font-weight: $weight;
    }

    @if $lh {
        line-height: $lh;
    }
}


/**
Placeholders
input,  
textarea {  
    @include input-placeholder {
        color: $grey;
    }
}
*/
@mixin input-placeholder {
    &.placeholder {
        @content;
    }

    &:-moz-placeholder {
        @content;
    }

    &::-moz-placeholder {
        @content;
    }

    &:-ms-input-placeholder {
        @content;
    }

    &::-webkit-input-placeholder {
        @content;
    }
}

/**
Truncate - Ellipsis
*/
@mixin truncate($truncation-boundary) {
    max-width: $truncation-boundary;
    white-space: nowrap;
    overflow: hidden;
    overflow: clip;
    text-overflow: ellipsis;
    overflow-clip-margin: rem(30);
    display: block;
}

/**
Center flex
*/
@mixin flex($x: center, $y: center) {
    display: flex;
    align-items: $x;
    justify-content: $y;
}


/**
Max Lines
*/

@mixin max-lines($lines) {
    display: -webkit-box;
    max-width: 100%;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
}


/**
Overflow X scroll 
*/
@mixin scroll() {

    display: flex;
    justify-content: flex-start;
    transform: none !important;
    flex-wrap: nowrap;
    overflow-y: hidden;
    overflow-x: auto;
    -webkit-appearance: none;
    -ms-overflow-style: none;
    /* IE and Edge */
    scrollbar-width: none;

    /* Firefox */
    &::-webkit-scrollbar {
        display: none;
        /* Chrome, Safari and Opera */
    }
}

/**
Hide scrollBar
*/
@mixin hideScroll() {

    -webkit-appearance: none;
    -ms-overflow-style: none;
    /* IE and Edge */
    scrollbar-width: none;

    /* Firefox */
    &::-webkit-scrollbar {
        display: none;
        /* Chrome, Safari and Opera */
    }
}

/**
Add Blur filter
*/
@mixin blur($q) {
    position: fixed !important;
    overflow-y: scroll !important;
    width: 100%;

    .header-main,
    .content-main,
    .footer-main {
        filter: blur(rem($q));
    }
}
